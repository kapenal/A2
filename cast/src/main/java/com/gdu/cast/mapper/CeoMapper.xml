<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdu.cast.mapper.CeoMapper">
	
	<resultMap type="com.gdu.cast.vo.ExperienceWishList" id="resultExpWish">
		<result column="experience_id" property="experienceId" />
		<association property="experience" javaType="com.gdu.cast.vo.Experience">
			<result column="experience_id" property="experienceId" />
			<result column="ceo_id" property="ceoId" />
		</association>
	</resultMap>
	
	<!-- 회원가입 -->
	<insert id="insertCeo" parameterType="com.gdu.cast.vo.Ceo">
		INSERT ceo(
			ceo_name,
			ceo_id,
			ceo_pw,
			ceo_email,
			ceo_license,
			ceo_phonenum,
			ceo_jumin,
			subscription_no,
			create_date,
			update_date
		) VALUES (
			#{ceoName},
			#{ceoId},
			password(#{ceoPw}),
			#{ceoEmail},
			#{ceoLicense},
			#{ceoPhonenum},
			#{ceoJumin},
			#{subscriptionNo},
			now(),
			now()
		)
	</insert>
	
	<!-- 로그인 -->
	<select id="loginCeo" parameterType="com.gdu.cast.vo.Ceo" resultType="com.gdu.cast.vo.Ceo">
		SELECT
			ceo_id ceoId
		FROM ceo
		WHERE ceo_id = #{ceoId}
		AND ceo_pw = password(#{ceoPw})
	</select>
	
	<!-- 내정보 -->
	<select id="selectCeo" parameterType="com.gdu.cast.vo.Ceo" resultType="com.gdu.cast.vo.Ceo">
		SELECT 
			ceo_name ceoName,
			ceo_id ceoId,
			ceo_email ceoEmail,
			ceo_license ceoLicense,
			ceo_phonenum ceoPhonenum,
			create_date createDate
		FROM ceo
		WHERE ceo_id = #{ceoId} 
	</select>
	
	<!-- 내정보 수정 -->
	<update id="updateCeo" parameterType="com.gdu.cast.vo.Ceo" >
		UPDATE ceo SET 
			ceo_id = #{ceoId},
			ceo_email = #{ceoEmail},
			ceo_license = #{ceoLicense},
			ceo_phonenum = #{ceoPhonenum},
			update_date = now()
		WHERE ceo_id = #{ceoId}
	</update>
	
	<!-- 비밀번호 변경 -->
	<update id="updateCeoPw" parameterType="com.gdu.cast.vo.Ceo">
		UPDATE ceo SET
			ceo_pw = password(#{newCeoPw}), update_date = now()
		WHERE ceo_id = #{ceoId} AND ceo_pw = password(#{ceoPw})
	</update>
	
	<!--메인화면 체험리스트 -->
	<select id="selectExperienceIndex" parameterType="Map" resultType="com.gdu.cast.vo.Experience">
		SELECT
			experience_name experienceName,
			experience_price experiencePrice,
			create_date createDate
      	FROM experience
      	WHERE ceo_id = #{ceoId}
	  	ORDER BY create_date DESC
		LIMIT 0, 4
	</select>
	
	<!-- 메인화면 호텔리스트 -->
	<select id="selectHotelIndex" parameterType="Map" resultType="com.gdu.cast.vo.Hotel">
		SELECT
			hotel_name hotelName,
			create_date createDate
		FROM hotel
		WHERE ceo_id = #{ceoId}
		ORDER BY create_date DESC
		LIMIT 0, 4
	</select>
	
	<!-- 메인화면 좋아요 -->
	<select id="selectExpWish" parameterType="int" resultMap="resultExpWish">
		SELECT
		 	COUNT(ew.experience_id) AS expWish
		 FROM experience e INNER JOIN experience_wishlist ew
		 ON e.experience_id = ew.experience_id
		 WHERE ceo_id = '${ceoId}'
	</select>
	
	<!-- 차트 -->
	<select id="selectExperienceMonth" parameterType="map" resultType="java.util.Map">
		SELECT
			SUM(CASE WHEN MONTH(ep.create_date)=1 THEN ep.experience_payment_money END) january,
			SUM(CASE WHEN MONTH(ep.create_date)=2 THEN ep.experience_payment_money END) february,
			SUM(CASE WHEN MONTH(ep.create_date)=3 THEN ep.experience_payment_money END) march,
			SUM(CASE WHEN MONTH(ep.create_date)=4 THEN ep.experience_payment_money END) april,
			SUM(CASE WHEN MONTH(ep.create_date)=5 THEN ep.experience_payment_money END) may,
			SUM(CASE WHEN MONTH(ep.create_date)=6 THEN ep.experience_payment_money END) june,
			SUM(CASE WHEN MONTH(ep.create_date)=7 THEN ep.experience_payment_money END) july,
			SUM(CASE WHEN MONTH(ep.create_date)=8 THEN ep.experience_payment_money END) august,
			SUM(CASE WHEN MONTH(ep.create_date)=9 THEN ep.experience_payment_money END) september,
			SUM(CASE WHEN MONTH(ep.create_date)=10 THEN ep.experience_payment_money END) october,
			SUM(CASE WHEN MONTH(ep.create_date)=11 THEN ep.experience_payment_money END) november,
			SUM(CASE WHEN MONTH(ep.create_date)=12 THEN ep.experience_payment_money END) december
		FROM experience_order eo INNER JOIN experience_payment ep
		ON eo.experience_order_id = ep.experience_payment_id 
		INNER JOIN experience e
		WHERE YEAR(ep.create_date) = #{year} AND e.ceo_id = #{ceoId}
	</select>
		<select id="selectRoomMonth" parameterType="map" resultType="java.util.Map">
		SELECT
			SUM(CASE WHEN MONTH(rp.create_date)=1 THEN rp.room_payment_money END) january,
			SUM(CASE WHEN MONTH(rp.create_date)=2 THEN rp.room_payment_money END) february,
			SUM(CASE WHEN MONTH(rp.create_date)=3 THEN rp.room_payment_money END) march,
			SUM(CASE WHEN MONTH(rp.create_date)=4 THEN rp.room_payment_money END) april,
			SUM(CASE WHEN MONTH(rp.create_date)=5 THEN rp.room_payment_money END) may,
			SUM(CASE WHEN MONTH(rp.create_date)=6 THEN rp.room_payment_money END) june,
			SUM(CASE WHEN MONTH(rp.create_date)=7 THEN rp.room_payment_money END) july,
			SUM(CASE WHEN MONTH(rp.create_date)=8 THEN rp.room_payment_money END) august,
			SUM(CASE WHEN MONTH(rp.create_date)=9 THEN rp.room_payment_money END) september,
			SUM(CASE WHEN MONTH(rp.create_date)=10 THEN rp.room_payment_money END) october,
			SUM(CASE WHEN MONTH(rp.create_date)=11 THEN rp.room_payment_money END) november,
			SUM(CASE WHEN MONTH(rp.create_date)=12 THEN rp.room_payment_money END) december
		FROM room_order ro INNER JOIN room_payment rp
		ON ro.room_order_id = rp.room_payment_id 
		INNER JOIN hotel h
		WHERE YEAR(rp.create_date) = #{year} AND h.ceo_id = #{ceoId}
	</select>
	
	
</mapper>

















