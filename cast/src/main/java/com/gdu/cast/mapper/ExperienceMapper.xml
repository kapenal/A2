<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdu.cast.mapper.ExperienceMapper">
	
	<!-- 체험등록에서 체험 & 주소 JOIN -->
	<resultMap type="com.gdu.cast.vo.Experience" id="resultExperience">
		<result column="experience_id" property="experienceId" />
		<result column="ceo_id" property="ceoId" />
		<result column="address_id" property="addressId" />
		<result column="experience_name" property="experienceName" />
		<result column="experience_content" property="experienceContent" />
		<result column="experience_price" property="experiencePrice" />
		<result column="experience_startdate" property="experienceStartdate" />
		<result column="experience_enddate" property="experienceEnddate" />
		<result column="experience_person" property="experiencePerson" />
		<result column="experience_create_date" property="createDate" />
		<result column="experience_update_date" property="updateDate" />
		<association property="address" javaType="com.gdu.cast.vo.Address">
			<result column="address_id" property="addressId" />
			<result column="postcode" property="postcode" />
			<result column="road_address" property="roadAddress" />
			<result column="jibun_address" property="jibunAddress" />
			<result column="detail_address" property="detailAddress" />
			<result column="extra_address" property="extraAddress" />
			<result column="lat" property="lat" />
			<result column="lng" property="lng" />
		</association>
	</resultMap>
	
   <!-- 체험 추가 -->
   <insert id="insertExp" parameterType="com.gdu.cast.vo.Experience">
     <selectKey resultType="int" keyProperty="experienceId" order="AFTER">
      	SELECT LAST_INSERT_ID()
      </selectKey>
      INSERT INTO
         experience (
         ceo_id,
         address_id,
         experience_name,
         experience_content,
         experience_price,
         experience_startdate,
         experience_enddate,
         experience_person,
         create_date,
         update_date
      ) VALUES (
         #{ceoId},
         #{addressId},
         #{experienceName},
         #{experienceContent},
         #{experiencePrice},
         #{experienceStartdate},
         #{experienceEnddate},
         #{experiencePerson},
         now(),
         now()
      )
   </insert>
   
   <!-- 체험 이미지 추가-->
	<insert id="insertExperienceImage" parameterType="com.gdu.cast.vo.ExperienceImage">
		INSERT INTO experience_image(
			experience_id,
			image_name,
			image_ext,
			image_size,
			create_date,
			update_date
		) VALUES (
			#{experienceId},
			#{imageName},
			#{imageExt},
			#{imageSize},
			now(),
			now()
		)
		<selectKey resultType="int" keyProperty="experienceImageId" order="BEFORE">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
   
   <!-- 주소 추가 -->
   <insert id="insertExpAddress" parameterType="com.gdu.cast.vo.Address">
      INSERT INTO
         address (
            postcode,
            road_address,
            jibun_address,
            detail_address,
            extra_address,
            lat,
            lng
         ) VALUES (
            #{postcode},
            #{roadAddress},
            #{jibunAddress},
            #{detailAddress},
            #{extraAddress},
            #{lat},
            #{lng}
         )
         <selectKey resultType="integer" keyProperty="addressId" order="AFTER">
            SELECT LAST_INSERT_ID()
         </selectKey>
   </insert>
   
   <!-- 체험 리스트 -->
   <select id="selectExperienceList" parameterType="Map" resultType="com.gdu.cast.vo.Experience">
      SELECT 
         experience_id experienceId,
         experience_name experienceName,
         experience_price experiencePrice,
         create_date createDate
      FROM experience
      <where>
         <if test='searchTitle != null or searchTitle == ""'>
            experience_name LIKE '%${searchTitle}%'
         </if>
      </where>
      ORDER BY create_date DESC
      LIMIT #{beginRow}, #{ROW_PER_PAGE}
   </select>
   
   <!-- 체험 글갯수 -->
   <select id="selectExperienceTotalCount" parameterType="String" resultType="int">
      SELECT COUNT(*)
      FROM experience
      <where>
         <if test='searchTitle != null or searchTitle == "" '>
             experience_name LIKE '%{searchTitle}%'
         </if>
      </where>
   </select>
   
   <!-- 체험 상세보기 -->
   <select id="selectExperienceOne" parameterType="int" resultMap="resultExperience">
   		SELECT *
		FROM address a INNER JOIN experience e
		ON a.address_id = e.address_id
		WHERE experience_id = #{experienceId}
   </select>
   
   <!-- 체험 상세보기 이미지 -->
   <select id="ExperienceImageList" parameterType="com.gdu.cast.vo.ExperienceImage" resultType="com.gdu.cast.vo.ExperienceImage">
   		SELECT 
   			experience_id experienceId,
   			image_name imageName,
   			image_ext imageExt,
   			image_size imageSize
   		FROM experience_image
   		WHERE experience_id = #{experienceId}
   </select>
   
   <!-- 체험 수정하기 -->
   <update id="updateExperience" parameterType="com.gdu.cast.vo.Experience">
   		UPDATE address a INNER JOIN experience e
   		ON a.address_id = e.address_id
   		SET 
   			e.experience_name = #{experienceName},
   			e.experience_content = #{experienceContent},
   			e.experience_price = #{experiencePrice},
   			e.experience_startdate = #{experienceStartdate},
   			e.experience_enddate = #{experienceEnddate},
   			e.experience_person = #{experiencePerson},
   			update_date = NOW()
   		WHERE experience_id = #{experienceId}
   </update>
   
   <!-- 체험 삭제 -->
   <delete id="deleteExperience" parameterType="com.gdu.cast.vo.Experience">
   		DELETE FROM experience
   		WHERE experience_id = #{experienceId}
   		AND ceo_id = #{ceoId}
   </delete>
   
   <!-- 체험 등록 시 제일 최근 experienceId 조회 -->
   <select id="selectExperienceId" parameterType="com.gdu.cast.vo.Experience" resultType="int">
   		SELECT experience_id experienceId
   		FROM experience
   		WHERE ceo_id = #{ceoId}
   		ORDER BY create_date DESC
   		LIMIT 0,1
   </select>
   
   <!-- 테마 체험 등록 -->
   <insert id="insertThemeExperience" parameterType="Map">
		INSERT INTO theme_small_experience(theme_small_id, experience_id, create_date, update_date)
		VALUES((SELECT theme_small_id FROM theme_small WHERE theme_small_name = #{theme}), #{experienceId}, NOW(), NOW())
   </insert>
</mapper>