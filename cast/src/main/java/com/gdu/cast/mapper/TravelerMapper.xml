<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdu.cast.mapper.TravelerMapper">

	<!-- 여행작가 메인 페이지 체험 추천 리스트에 고객 이름 및 댓글 Join -->
	<resultMap type="com.gdu.cast.vo.ExperienceSelectComment" id="resultExperienceSelectComment">
		<id column="experience_select_comment_id" property="experienceSelectCommentId"></id>
		<result column="customer_id" property="customerId"></result>
		<result column="experience_select_id" property="experienceSelectId"></result>
		<result column="experience_select_content" property="experienceSelectContent"></result>
		<result column="create_date" property="createDate"></result>
		<result column="update_date" property="updateDate"></result>
		<collection property="experienceSelect" ofType="com.gdu.cast.vo.ExperienceSelect">
			<result column="traveler_id" property="travelerId"></result>
		</collection>
		<collection property="customer" ofType="com.gdu.cast.vo.Customer">
			<result column="customer_name" property="customerName"></result>
		</collection>
	</resultMap>

	<!-- 여행작가 메인 페이지 숙소 추천 리스트에 고객 이름 및 댓글 Join -->
	<resultMap type="com.gdu.cast.vo.RoomSelectComment" id="resultRoomSelectComment">
		<id column="room_select_comment_id" property="roomSelectCommentId"></id>
		<result column="customer_id" property="customerId"></result>
		<result column="room_select_id" property="roomSelectId"></result>
		<result column="room_select_content" property="roomSelectContent"></result>
		<result column="create_date" property="createDate"></result>
		<result column="update_date" property="updateDate"></result>
		<collection property="roomSelect" ofType="com.gdu.cast.vo.RoomSelect">
			<result column="traveler_id" property="travelerId"></result>
		</collection>
		<collection property="customer" ofType="com.gdu.cast.vo.Customer">
			<result column="customer_name" property="customerName"></result>
		</collection>
	</resultMap>
	
	<!-- 여행작가 메인 페이지 체험 추천 리스트에 여행작가 이름 Join -->
	<resultMap type="com.gdu.cast.vo.ExperienceSelect" id="resultExperienceSelect">
		<id column="experience_select_id" property="experienceSelectId"></id>
		<result column="traveler_id" property="travelerId"></result>
		<result column="experience_id" property="experienceId"></result>
		<result column="experience_select_title" property="experienceSelectTitle"></result>
		<result column="experience_select_content" property="experienceSelectContent"></result>
		<result column="create_date" property="createDate"></result>
		<result column="update_date" property="updateDate"></result>
		<collection property="traveler" ofType="com.gdu.cast.vo.Traveler">
			<result column="traveler_name" property="travelerName"></result>
		</collection>
	</resultMap>
	
	<!-- 여행작가 메인 페이지 숙소 추천 리스트에 여행작가 이름 Join -->
	<resultMap type="com.gdu.cast.vo.RoomSelect" id="resultRoomSelect">
		<id column="room_select_id" property="roomSelectId"></id>
		<result column="traveler_id" property="travelerId"></result>
		<result column="hotel_id" property="hotelId"></result>
		<result column="room_select_title" property="roomSelectTitle"></result>
		<result column="room_select_content" property="roomSelectContent"></result>
		<result column="create_date" property="createDate"></result>
		<result column="update_date" property="updateDate"></result>
		<collection property="traveler" ofType="com.gdu.cast.vo.Traveler">
			<result column="traveler_name" property="travelerName"></result>
		</collection>
	</resultMap>
	
	<!-- 자신이 등록한 체험 추천 글의 댓글 수 -->
	<select id="selectExperienceSelectCommentTotalCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM experience_select_comment esc
		INNER JOIN experience_select e
		INNER JOIN customer c
		ON e.experience_select_id = esc.experience_select_id
		AND c.customer_id = esc.customer_id
		WHERE e.traveler_id = #{travelerId}
	</select>
	
	<!-- 자신이 등록한 체험 추천 글의 댓글 리스트 -->
	<select id="selectExperienceSelectCommentList" parameterType="Map" resultMap="resultExperienceSelectComment">
		SELECT 
			esc.experience_select_comment_id,
			esc.experience_select_id,
			c.customer_name,
			esc.experience_select_content,
			esc.create_date
		FROM experience_select_comment esc
		INNER JOIN experience_select e
		INNER JOIN customer c
		ON e.experience_select_id = esc.experience_select_id
		AND c.customer_id = esc.customer_id
		WHERE e.traveler_id = #{travelerId}
		ORDER BY esc.create_date DESC
		LIMIT #{beginRow}, #{ROW_PER_PAGE}
	</select>
	
	<!-- 자신이 등록한 숙소 추천 글의 댓글 수 -->
	<select id="selectRoomSelectCommentTotalCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM room_select_comment rsc
		INNER JOIN room_select r
		INNER JOIN customer c
		ON r.room_select_id = rsc.room_select_id
		AND c.customer_id = rsc.customer_id
		WHERE r.traveler_id = #{travelerId}
	</select>
	
	<!-- 자신이 등록한 숙소 추천 글의 댓글 리스트 -->
	<select id="selectRoomSelectCommentList" parameterType="Map" resultMap="resultRoomSelectComment">
		SELECT 
			r.traveler_id,
			rsc.room_select_comment_id,
			rsc.room_select_id,
			c.customer_name,
			rsc.room_select_content,
			rsc.create_date
		FROM room_select_comment rsc
		INNER JOIN room_select r
		INNER JOIN customer c
		ON r.room_select_id = rsc.room_select_id
		AND c.customer_id = rsc.customer_id
		WHERE r.traveler_id = #{travelerId}
		ORDER BY rsc.create_date DESC
		LIMIT #{beginRow}, #{ROW_PER_PAGE}
	</select>
	
	<!-- 여행작가 메인 페이지 자신이 등록한 체험 추천 글의 댓글 출력(5개) -->
	<select id="selectExperienceSelectCommentListByMain" parameterType="com.gdu.cast.vo.ExperienceSelect" resultMap="resultExperienceSelectComment">
		SELECT 
			esc.experience_select_comment_id,
			esc.experience_select_id,
			c.customer_name,
			esc.experience_select_content,
			esc.create_date
		FROM experience_select_comment esc
		INNER JOIN experience_select e
		INNER JOIN customer c
		ON e.experience_select_id = esc.experience_select_id
		AND c.customer_id = esc.customer_id
		WHERE e.traveler_id = #{travelerId}
		ORDER BY esc.create_date DESC
		LIMIT 0, 5
	</select>
	
	<!-- 여행작가 메인 페이지 자신이 등록한 숙소 추천 글의 댓글 출력(5개) -->
	<select id="selectRoomSelectCommentListByMain" parameterType="com.gdu.cast.vo.RoomSelectComment" resultMap="resultRoomSelectComment">
		SELECT 
			r.traveler_id,
			rsc.room_select_comment_id,
			rsc.room_select_id,
			c.customer_name,
			rsc.room_select_content,
			rsc.create_date
		FROM room_select_comment rsc
		INNER JOIN room_select r
		INNER JOIN customer c
		ON r.room_select_id = rsc.room_select_id
		AND c.customer_id = rsc.customer_id
		WHERE r.traveler_id = #{travelerId}
		ORDER BY rsc.create_date DESC
		LIMIT 0, 5
	</select>
	
	<!-- 여행작가 비밀번호 변경 -->
	<update id="updateTravelerPw" parameterType="com.gdu.cast.vo.Traveler">   
		UPDATE traveler
		SET traveler_pw = password(#{newTravelerPw}), 
		update_date = now()
		WHERE traveler_id = #{travelerId} 
		AND traveler_pw = password(#{travelerPw})
	</update>
	
	<!-- 회원 탈퇴 아이디 중복 검사 -->
	<select id="selectDeleteTravelerId"  parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM delete_id
		WHERE id=#{travelerId}
	</select>
	
	<!-- 회원 가입 시 아이디 중복 검사 -->
	<select id="selectTravelerId"  parameterType="String" resultType="String">
		SELECT traveler_id travelerId
		FROM traveler
		WHERE traveler_id=#{travelerId}
	</select>
	
	<!-- 회원 탈퇴 시 비밀번호 조회 -->
	<select id="selectTravelerPw" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM traveler
		WHERE traveler_id=#{travelerId}
		AND traveler_pw=password(#{travelerPw})
	</select>
	
	<!-- 회원 탈퇴(delete_id 테이블에 id 값 입력) -->
	<insert id="insertDeleteTravelerId" parameterType="com.gdu.cast.vo.Delete_Id">
   		INSERT INTO delete_id (id, create_date, update_date)
   		VALUES(#{travelerId}, now(),now())
   	</insert>

	<!-- 회원 탈퇴(traveler 테이블 데이터 삭제) -->
	<delete id="deleteTraveler" parameterType="com.gdu.cast.vo.Traveler">
		DELETE 
		FROM traveler
		WHERE traveler_id=#{travelerId}
		AND traveler_pw=password(#{travelerPw})
	</delete>
	
	<!-- 여행작가 메인 페이지 자신이 등록한 체험 추천 리스트 출력(5개) -->
	<select id="selectExperienceListByMain" parameterType="com.gdu.cast.vo.ExperienceSelect" resultMap="resultExperienceSelect">
		SELECT 
			e.experience_select_id,
			e.traveler_id,
			e.experience_select_title,
			t.traveler_name,
			e.create_date
		FROM traveler t INNER JOIN experience_select e
		ON t.traveler_id = e.traveler_id
		WHERE t.traveler_id = #{travelerId}
		ORDER BY e.experience_select_id DESC
		LIMIT 0, 5
	</select>

	<!-- 여행작가 메인 페이지 자신이 등록한 숙소 추천 리스트 출력(5개) -->
	<select id="selectRoomSelectListByMain" parameterType="com.gdu.cast.vo.RoomSelect" resultMap="resultRoomSelect">
		SELECT 
			r.room_select_id,
			r.traveler_id,
			r.room_select_title,
			t.traveler_name,
			r.create_date
		FROM traveler t INNER JOIN room_select r
		ON t.traveler_id = r.traveler_id
		WHERE t.traveler_id = #{travelerId}
		ORDER BY r.room_select_id DESC
		LIMIT 0, 5
	</select>

	<!-- 여행작가 내정보 수정 -->
	<update id="updateTravelerMyInfo" parameterType="com.gdu.cast.vo.Traveler">
		UPDATE traveler
		SET
			traveler_name = #{travelerName},
			traveler_PhoneNum = #{travelerPhoneNum},
			traveler_email = #{travelerEmail},
			traveler_career = #{travelerCareer}
		WHERE traveler_id=#{travelerId}
	</update>

	<!-- 여행작가 프로필 -->
	<select id="selectTravelerMyInfo" parameterType="com.gdu.cast.vo.Traveler" resultType="com.gdu.cast.vo.Traveler">
		SELECT
			traveler_name travelerName,
			traveler_pw travelerPw,
			traveler_jumin travelerJumin,
			traveler_phonenum travelerPhoneNum,
			traveler_email travelerEmail,
			traveler_license travelerLicense,
			traveler_career travelerCareer
		FROM traveler
		WHERE traveler_id=#{travelerId}
	</select>
	
	<!-- 여행작가 로그인 -->
	<select id="selectTraveler" parameterType="com.gdu.cast.vo.Traveler" resultType="com.gdu.cast.vo.Traveler">
		SELECT
			traveler_id travelerId
		FROM traveler
		WHERE traveler_id=#{travelerId}
		AND traveler_pw=password(#{travelerPw})
	</select>

	<!-- 여행작가 회원가입 -->
	<insert id="insertTraveler" parameterType="com.gdu.cast.vo.Traveler">
		INSERT traveler (
			traveler_id,
			traveler_pw,
			traveler_name,
			traveler_jumin,
			traveler_phonenum,
			traveler_email,
			traveler_license,
			traveler_career,
			create_date,
			update_date
		) VALUES (
			#{travelerId},
			password(#{travelerPw}),
			#{travelerName},
			#{travelerJumin},
			#{travelerPhoneNum},
			#{travelerEmail},
			#{travelerLicense},
			#{travelerCareer},
			NOW(),
			NOW()
		)
	</insert>
</mapper>