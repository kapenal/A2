<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdu.cast.mapper.MainExperienceOrHotelReviewMapper">
	
		<!-- 메인 페이지 체험 추천 리스트에 직성자 이름 및 이미지 Join -->
	<resultMap type="com.gdu.cast.vo.ExperiencePaymentReview" id="resultExperiencePaymentReview">
		<id column="experience_payment_review_id" property="experiencePaymentReviewId"></id>
		<result column="experience_id" property="experienceId"></result>
		<result column="experience_payment_id" property="experiencePaymentId"></result>
		<result column="experience_payment_review_content" property="experiencePaymentReviewContent"></result>
		<result column="create_date" property="createDate"></result>
		<result column="update_date" property="updateDate"></result>
		<collection property="experiencePaymentReviewImage" ofType="com.gdu.cast.vo.ExperiencePaymentReviewImage">
			<result column="image_name" property="imageName"></result>
			<result column="image_ext" property="imageExt"></result>
			<result column="image_size" property="imageSize"></result>
		</collection>
		<collection property="experienceOrder" ofType="com.gdu.cast.vo.ExperienceOrder">
			<result column="customer_id" property="customerId"></result>
		</collection>
	</resultMap>
	
			<!-- 메인 페이지 숙소 추천 리스트에 작성자 이름 및 이미지 Join -->
	<resultMap type="com.gdu.cast.vo.RoomPaymentReview" id="resultRoomPaymentReview">
		<id column="room_payment_review_id" property="roomPaymentReviewId"></id>
		<result column="hotel_id" property="hotelId"></result>
		<result column="room_payment_id" property="roomPaymentId"></result>
		<result column="room_payment_review_content" property="roomPaymentReviewContent"></result>
		<result column="create_date" property="createDate"></result>
		<result column="update_date" property="updateDate"></result>
		<collection property="roomPaymentReviewImage" ofType="com.gdu.cast.vo.RoomPaymentReviewImage">
			<result column="image_name" property="imageName"></result>
			<result column="image_ext" property="imageExt"></result>
			<result column="image_size" property="imageSize"></result>
		</collection>
		<collection property="roomOrder" ofType="com.gdu.cast.vo.RoomOrder">
			<result column="customer_id" property="customerId"></result>
		</collection>
	</resultMap>
	
	<!-- experience review list-->
	<select id="experiencePaymentReview" parameterType="Map" resultMap="resultExperiencePaymentReview">
		SELECT 
		er.experience_payment_review_id,
		er.experience_id,
		er.experience_payment_id,
		er.experience_payment_review_content,
		ei.image_name,
		ei.image_ext,
		ei.image_size,
		eo.customer_id,
		er.create_date,
		er.update_date
		FROM  experience_payment_review er
		left join experience_payment_review_image ei on er.experience_payment_review_id = ei.experience_payment_review_id
		left join experience_payment ep on er.experience_payment_id = ep.experience_payment_id
		left join experience_order eo on eo.experience_order_id = ep.experience_order_id
		WHERE er.experience_id = #{experienceId}
		ORDER BY er.create_date DESC
		LIMIT #{beginRow}, #{ROW_PER_PAGE}
	</select>

		<!--  experience review list 페이징 -->
	<select id="selectExperienceReviewTotalCount" parameterType="String" resultType="int">
	SELECT COUNT(*) 
	FROM experience_payment_review
	</select>
	
	<!-- 체험 결제 아이디 매개변수 -->
	<select  id="selectCustomerPaymentId" parameterType="String" resultType="int">
	SELECT ep.experience_payment_id experiencePaymentId
	FROM experience_order eo inner join experience_payment ep on eo.experience_order_id = ep.experience_order_id
	WHERE eo.customer_id = #{customerId} AND eo.experience_name = #{experienceName}
	</select>
	
	<!-- 체험 리뷰 추가 -->
	<insert id="insertExperiencePaymentReview" parameterType="com.gdu.cast.vo.ExperiencePaymentReview">
		INSERT INTO experience_payment_review(
			experience_payment_id,
			experience_id,
			experience_payment_review_content,
			create_date,
			update_date
		) values(
			#{experiencePaymentId},
			#{experienceId},
			#{experiencePaymentReviewContent},
			now(),
			now()
		)
		<!-- 체험 후기 사진 추가에 사용할 키값 -->
		<selectKey resultType="int" keyProperty="experiencePaymentReviewId" order="AFTER">
            SELECT experience_payment_review_id FROM experience_payment_review ORDER BY create_date DESC LIMIT 0,1
        </selectKey>
	</insert>
	
	<!--  체험 후기 사진 추가 -->
		<insert id="insertExperiencePaymentReviewImage" parameterType="com.gdu.cast.vo.ExperiencePaymentReviewImage">
		INSERT INTO experience_payment_review_image(
			experience_payment_review_id,
			image_name,
			image_ext,
			image_size,
			create_date,
			update_date
		) VALUES (
			#{experiencePaymentReviewId},
			#{imageName},
			#{imageExt},
			#{imageSize},
			NOW(),
			NOW()
		)
	</insert>
	
	<!-- 	체험 후기 삭제 -->
	<delete id="deleteExperienceReview" parameterType="int">
		DELETE FROM experience_payment_review
   		WHERE experience_payment_review_id = #{experiencePaymentReviewId}
	</delete>
	
		
		<!-- room review list-->
	<select id="roomPaymentReview" parameterType="Map" resultMap="resultRoomPaymentReview">
		SELECT 
		rr.room_payment_review_id,
		rr.hotel_id,
		rr.room_payment_id,
		rr.room_payment_review_content,
		ri.image_name,
		ri.image_ext,
		ri.image_size,
		ro.customer_id,
		rr.create_date,
		rr.update_date
		FROM  room_payment_review rr
		left join room_payment_review_image ri on rr.room_payment_review_id = ri.room_payment_review_id
		left join room_payment rp on rr.room_payment_id = rp.room_payment_id
		left join room_order ro on ro.room_order_id = rp.room_order_id
		WHERE rr.hotel_id = #{hotelId}
		ORDER BY rr.create_date DESC
		LIMIT #{beginRow}, #{ROW_PER_PAGE}
	</select>

		<!--  room review list 페이징 -->
	<select id="selectRoomReviewTotalCount" parameterType="String" resultType="int">
	SELECT COUNT(*) 
	FROM room_payment_review
	</select>
	
		<!-- 호텔 결제 아이디 매개변수 -->
	<select  id="selectCustomerHotelPaymentId" parameterType="String" resultType="int">
	SELECT rp.room_payment_id roomPaymentId
	FROM room_order ro inner join room_payment rp on ro.room_order_id = rp.room_order_id
	WHERE ro.customer_id = #{customerId} AND ro.hotel_name = #{hotelName}
	</select>
	
		<!-- 호텔 리뷰 추가 -->
	<insert id="insertRoomPaymentReview" parameterType="com.gdu.cast.vo.RoomPaymentReview">
		INSERT INTO room_payment_review(
			room_payment_id,
			hotel_id,
			room_payment_review_content,
			create_date,
			update_date
		) values(
			#{roomPaymentId},
			#{hotelId},
			#{roomPaymentReviewContent},
			now(),
			now()
		)
		<!-- 호텔 후기 사진 추가에 사용할 키값 -->
		<selectKey resultType="int" keyProperty="roomPaymentReviewId" order="AFTER">
            SELECT room_payment_review_id FROM room_payment_review ORDER BY create_date DESC LIMIT 0,1
        </selectKey>
	</insert>
	
		<!--  호텔 후기 사진 추가 -->
		<insert id="insertRoomPaymentReviewImage" parameterType="com.gdu.cast.vo.RoomPaymentReviewImage">
		INSERT INTO room_payment_review_image(
			room_payment_review_id,
			image_name,
			image_ext,
			image_size,
			create_date,
			update_date
		) VALUES (
			#{roomPaymentReviewId},
			#{imageName},
			#{imageExt},
			#{imageSize},
			NOW(),
			NOW()
		)
	</insert>
	
		<!-- 호텔 후기 삭제 -->
	<delete id="deletehotelReview" parameterType="int">
		DELETE FROM room_payment_review
   		WHERE room_payment_review_id = #{roomPaymentReviewId}
	</delete>
	
	<!-- 결제 안한사람은 후기 추가 못하게.. -->
	<select id="selectExperienceId" parameterType="String" resultType="String">
		SELECT experience_name experienceName
		FROM experience_order
		WHERE customer_id = #{customerId} AND experience_name = #{experienceName}
	</select>
	
	<select id="selectHotelId"></select>
	
	
</mapper>