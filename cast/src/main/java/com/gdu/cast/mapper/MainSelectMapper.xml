<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gdu.cast.mapper.MainSelectMapper">

	<!-- 메인 페이지 체험 추천 리스트에 여행작가 이름 Join -->
	<resultMap type="com.gdu.cast.vo.ExperienceSelect" id="resultExperienceSelect">
		<id column="experience_select_id" property="experienceSelectId"></id>
		<result column="traveler_id" property="travelerId"></result>
		<result column="experience_id" property="experienceId"></result>
		<result column="experience_select_title" property="experienceSelectTitle"></result>
		<result column="experience_select_content" property="experienceSelectContent"></result>
		<result column="create_date" property="createDate"></result>
		<result column="update_date" property="updateDate"></result>
		<collection property="traveler" ofType="com.gdu.cast.vo.Traveler">
			<result column="traveler_name" property="travelerName"></result>
		</collection>
	</resultMap>
	
	<!-- 메인 페이지 숙소 추천 리스트에 여행작가 이름 Join -->
	<resultMap type="com.gdu.cast.vo.RoomSelect" id="resultRoomSelect">
		<id column="room_select_id" property="roomSelectId"></id>
		<result column="traveler_id" property="travelerId"></result>
		<result column="hotel_id" property="hotelId"></result>
		<result column="room_select_title" property="roomSelectTitle"></result>
		<result column="room_select_content" property="roomSelectContent"></result>
		<result column="create_date" property="createDate"></result>
		<result column="update_date" property="updateDate"></result>
		<collection property="traveler" ofType="com.gdu.cast.vo.Traveler">
			<result column="traveler_name" property="travelerName"></result>
		</collection>
	</resultMap>

	<!-- 메인 페이지의 체험 추천 삭제 -->
	<delete id="deleteExperienceSelect" parameterType="com.gdu.cast.vo.ExperienceSelect">
		DELETE FROM experience_select
		WHERE experience_select_id = #{experienceSelectId}
		AND traveler_id = #{travelerId}
	</delete>
	
	<!-- 메인 페이지의 체험 추천 수정 -->
	<update id="updateExperienceSelect" parameterType="com.gdu.cast.vo.ExperienceSelect">
		UPDATE experience_select
		SET 
			experience_select_title = #{experienceSelectTitle}, 
			experience_select_content = #{experienceSelectContent},
			update_date = NOW()
		WHERE 
			experience_select_id = #{experienceSelectId}
		AND traveler_id = #{travelerId}
	</update>
	
	<!-- 메인 페이지의 숙소 추천 삭제 -->
	<delete id="deleteRoomSelect" parameterType="com.gdu.cast.vo.RoomSelect">
		DELETE FROM room_select
		WHERE room_select_id = #{roomSelectId}
		AND traveler_id = #{travelerId}
	</delete>
	
	<!-- 메인 페이지의 숙소 추천 수정 -->
	<update id="updateRoomSelect" parameterType="com.gdu.cast.vo.RoomSelect">
		UPDATE room_select
		SET 
			room_select_title = #{roomSelectTitle}, 
			room_select_content = #{roomSelectContent},
			update_date = NOW()
		WHERE 
			room_select_id = #{roomSelectId}
		AND traveler_id = #{travelerId}
	</update>

	<!-- 메인 페이지의 체험 추천 상세보기 -->
	<select id="selectExperienceSelectOne" parameterType="int" resultMap="resultExperienceSelect">
		SELECT 
			e.experience_select_id,
			e.traveler_id,
			e.experience_id,
			e.experience_select_title,
			e.experience_select_content,
			t.traveler_name,
			e.create_date,
			e.update_date
		FROM traveler t INNER JOIN experience_select e
		ON t.traveler_id = e.traveler_id
		WHERE e.experience_select_id = #{experienceSelectId}
	</select>

	<!-- 메인 페이지의 숙소 추천 상세보기 -->
	<select id="selectRoomSelectOne" parameterType="int" resultMap="resultRoomSelect">
		SELECT 
			r.room_select_id,
			r.traveler_id,
			r.hotel_id,
			r.room_select_title,
			r.room_select_content,
			t.traveler_name,
			r.create_date,
			r.update_date
		FROM traveler t INNER JOIN room_select r
		ON t.traveler_id = r.traveler_id
		WHERE r.room_select_id = #{roomSelectId}
	</select>
	
	<!-- 메인 페이지의 체험 추천 전체 글 수 -->
	<select id="selectExperienceTotalCount" parameterType="String" resultType="int">
		SELECT COUNT(*) 
		FROM experience_select
		<where>
			<if test='searchTitle != null or searchTitle == ""'>
			experience_select_title LIKE '%${searchTitle}%'
			</if>
		</where>
	</select>

	<!-- 메인 페이지의 체험 추천 리스트 -->
	<select id="selectExperienceList" parameterType="Map" resultMap="resultExperienceSelect">
		SELECT 
			e.experience_select_id,
			e.traveler_id,
			e.experience_select_title,
			t.traveler_name,
			e.create_date
		FROM traveler t INNER JOIN experience_select e
		ON t.traveler_id = e.traveler_id
		<where>
			<if test='searchTitle != null or searchTitle == ""'>
			experience_select_title LIKE '%${searchTitle}%'
			</if>
		</where>
		ORDER BY e.create_date DESC
		LIMIT #{beginRow}, #{ROW_PER_PAGE}
	</select>

	<!-- 메인 페이지의 숙소 추천 전체 글 수 -->
	<select id="selectRoomSelectTotalCount" parameterType="String" resultType="int">
		SELECT COUNT(*) 
		FROM room_select
		<where>
			<if test='searchTitle != null or searchTitle == ""'>
				room_select_title LIKE '%${searchTitle}%'
			</if>
		</where>
	</select>
	
	<!-- 메인 페이지의 숙소 추천 리스트 -->
	<select id="selectRoomSelectList" parameterType="Map" resultMap="resultRoomSelect">
		SELECT 
			r.room_select_id,
			r.traveler_id,
			r.room_select_title,
			t.traveler_name,
			r.create_date
		FROM traveler t INNER JOIN room_select r
		ON t.traveler_id = r.traveler_id
		<where>
			<if test='searchTitle != null or searchTitle == ""'>
				room_select_title LIKE '%${searchTitle}%'
			</if>
		</where>
		ORDER BY r.create_date DESC
		LIMIT #{beginRow}, #{ROW_PER_PAGE}
	</select>
</mapper>